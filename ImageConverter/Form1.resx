<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wFMykXotKO8/gAAAABJRU5ErkJggg==
</value>
  </data>
</root>